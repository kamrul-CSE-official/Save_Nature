---
import { Button } from "../ui/button";
import Logo from "./logo.astro";

interface INavItem {
  href: string;
  label: string;
}

const navItems: INavItem[] = [
  { href: "/", label: "Home" },
  { href: "/about", label: "About Us" },
  { href: "/what-we-do", label: "What We Do" },
  { href: "/media", label: "Media" },
  { href: "/contact", label: "Contact" },
];

const pathName: string = Astro.url.pathname;
---

<nav
  class="fixed top-0 left-0 right-0 bg-white bg-opacity-90 backdrop-blur-sm z-50"
>
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <!-- Logo Component -->
      <Logo />

      <!-- Desktop Navigation -->
      <div class="hidden md:flex space-x-4">
        {
          navItems.map(({ href, label }) => (
            <a
              href={href}
              class={`"text-gray-600 hover:text-gray-800" ${pathName === href ? "border-b-4 border-green-500" : ""}`}
            >
              {label}
            </a>
          ))
        }
      </div>

      <!-- Donate Button for Desktop -->
      <div class="hidden md:block">
        <Button> Donate </Button>
      </div>

      <!-- Mobile Navigation Menu -->
      <div class="md:hidden">
        <button id="menuToggle" class="border border-gray-300 p-2 rounded">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="3" y1="6" x2="21" y2="6"></line>
            <line x1="3" y1="18" x2="21" y2="18"></line>
          </svg>
          <span class="sr-only">Toggle menu</span>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Navigation Sheet -->
  <div
    id="mobileNav"
    class="fixed inset-y-0 right-0 w-64 bg-white text-base shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out z-10"
  >
    <div class="flex justify-between items-center p-4">
      <h2 class="text-lg font-semibold">Menu</h2>
      <button id="closeMenu" class="border border-gray-300 p-1 rounded">
        &times;
      </button>
    </div>
    <nav class="flex flex-col space-y-4 p-4 bg-white">
      {
        navItems.map(({ href, label }) => (
          <a href={href} class="text-base hover:text-gray-800">
            {label}
          </a>
        ))
      }
      <Button> Donate </Button>
    </nav>
  </div>
</nav>

<script>
  const menuToggle = document.getElementById("menuToggle");
  const mobileNav = document.getElementById("mobileNav");
  const closeMenu = document.getElementById("closeMenu");

  if (menuToggle && mobileNav) {
    menuToggle.addEventListener("click", () => {
      mobileNav.classList.toggle("translate-x-full");
    });

    // Close mobile nav when clicking on a link
    const mobileNavLinks = mobileNav.querySelectorAll("a");
    mobileNavLinks.forEach((link) => {
      link.addEventListener("click", () => {
        mobileNav.classList.add("translate-x-full");
      });
    });
  }

  // Close menu button functionality
  if (closeMenu) {
    closeMenu.addEventListener("click", () => {
      mobileNav?.classList.add("translate-x-full");
    });
  }
</script>
